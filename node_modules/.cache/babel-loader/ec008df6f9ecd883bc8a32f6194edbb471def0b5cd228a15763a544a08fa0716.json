{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reggie\\\\Documents\\\\School\\\\ReginaldGreen02.github.io\\\\website-two\\\\src\\\\StickyNavbar.js\",\n  _s = $RefreshSig$();\n// src/components/StickyNavbar.js\n\nimport React, { useState, useEffect } from 'react';\nimport Dropdown from './Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StickyNavbar() {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    // Add scroll event listener to show/hide the navbar\n    const handleScroll = () => {\n      if (window.scrollY > 20) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    // Remove the event listener when the component unmounts\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `fixed top-0 left-0 w-full p-4 transition-all duration-300 ${isVisible ? 'bg-gray-200' : 'bg-transparent'} z-50`,\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(StickyNavbar, \"J3yJOyGdBT4L7hs1p1XQYVGMdrY=\");\n_c = StickyNavbar;\nexport default StickyNavbar;\nvar _c;\n$RefreshReg$(_c, \"StickyNavbar\");","map":{"version":3,"names":["React","useState","useEffect","Dropdown","jsxDEV","_jsxDEV","StickyNavbar","_s","isVisible","setIsVisible","handleScroll","window","scrollY","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Reggie/Documents/School/ReginaldGreen02.github.io/website-two/src/StickyNavbar.js"],"sourcesContent":["// src/components/StickyNavbar.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Dropdown from './Dropdown';\r\n\r\nfunction StickyNavbar() {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Add scroll event listener to show/hide the navbar\r\n    const handleScroll = () => {\r\n      if (window.scrollY > 20) {\r\n        setIsVisible(true);\r\n      } else {\r\n        setIsVisible(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    // Remove the event listener when the component unmounts\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <nav className={`fixed top-0 left-0 w-full p-4 transition-all duration-300 ${isVisible ? 'bg-gray-200' : 'bg-transparent'} z-50`}>\r\n      <Dropdown/>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default StickyNavbar;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIC,MAAM,CAACC,OAAO,GAAG,EAAE,EAAE;QACvBH,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,MAAM;QACLA,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDE,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKU,SAAS,EAAG,6DAA4DP,SAAS,GAAG,aAAa,GAAG,gBAAiB,OAAO;IAAAQ,QAAA,eAC/HX,OAAA,CAACF,QAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACb,EAAA,CA1BQD,YAAY;AAAAe,EAAA,GAAZf,YAAY;AA4BrB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}